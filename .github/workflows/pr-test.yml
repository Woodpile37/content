# This file tests more or less everything related to a pull request. All
# in one big job. At the end, if all the testing passes, it proceeds
# to upload all the files that were built to our Dev environment.
# This way, if the tests passed, you'll be able to review the built
# pages on a public URL.

name: PR Test

on:
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      BASE_SHA: ${{ github.event.pull_request.base.sha }}
      HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      # This is the directory where the built files will be placed.
      # It's also hardcoded in the `yarn build` command in package.json.
      # If you change it here, you must also make the same change in
      # package.json.
      BUILD_OUT_ROOT: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: yarn

      # This is a "required" workflow so path filtering can not be used:
      # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
      # We have to rely on a custom filtering mechanism to run the checks only if required files are modified.
      - uses: dorny/paths-filter@v2
        name: See if any file needs checking
        id: filter
        with:
          filters: |
            required_files :
              - ".nvmrc"
              - ".github/workflows/pr-test.yml"
              - "files/en-us/**"

      - name: Install all yarn packages
        if: steps.filter.outputs.required_files == 'true'
        run: yarn --frozen-lockfile
        env:
          # https://github.com/microsoft/vscode-ripgrep#github-api-limit-note
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get changed files
        if: steps.filter.outputs.required_files == 'true'
        run: |
          # If you don't do this, the get-diff-action won't be able to
          # notice files that contain non-ascii characters.
          # I.e.
          #
          #    ▶ git status
          #    Changes not staged for commit:
          #    ...
          #   modified:   "files/en-us/glossary/b\303\251zier_curve/index.html"
          #
          # But after you set `core.quotePath` you get:
          #
          #    ▶ git status
          #    Changes not staged for commit:
          #    ...
          #   modified:   "files/en-us/glossary/bézier_curve/index.html"
          #
          # Now, this gets used by the `git diff ...` inside get-diff-action.
          git config --global core.quotePath false

      - uses: technote-space/get-diff-action@v6.1.0
        id: git_diff_content
        with:
          PATTERNS: files/**/*.+(html|md)
          SET_ENV_NAME: GIT_DIFF_CONTENT

      - name: Build changed content
        if: ${{ env.GIT_DIFF_CONTENT }}
        env:
          CONTENT_ROOT: ${{ github.workspace }}/files

          # This is so that if there's a single 'unsafe_html' flaw, it
          # completely fails the build.
          # But all other flaws should be 'warn', so that we can include
          # information about the flaws when we analyze the built PR.
          BUILD_FLAW_LEVELS: "unsafe_html: error, *:warn"

          # Because we build these pages in a way that you get a toolbar,
          # so the flaws can be displayed, but we don't want any of the
          # other toolbar features like "Fix fixable flaws" or "Quick-edit"
          # we set this to disable that stuff.
          REACT_APP_CRUD_MODE_READONLY: true

          BUILD_LIVE_SAMPLES_BASE_URL: https://live.mdnyalp.dev
          BUILD_LEGACY_LIVE_SAMPLES_BASE_URL: https://live-samples.mdn.allizom.net

          # In these builds, we never care for or need the ability to sign in.
          # This environment variable will disable that functionality entirely.
          REACT_APP_DISABLE_AUTH: true

          # TODO: This should be implicit when `CI=true`
          BUILD_NO_PROGRESSBAR: true

          # Playground
          REACT_APP_PLAYGROUND_BASE_HOST: mdnyalp.dev

        run: |
          # The reason this script isn't in `package.json` is because
          # you don't need that script as a writer. It's only used in CI
          # and it can't use the default CONTENT_ROOT that gets set in
          # package.json.
          yarn build ${{ env.GIT_DIFF_CONTENT }}

          echo "Disk usage size of the build"
          du -sh ${{ env.BUILD_OUT_ROOT }}

          # Save the PR number into the build
          echo ${{ github.event.number }} > ${{ env.BUILD_OUT_ROOT }}/NR

          # Download the raw diff blob and store that inside the build
          # directory.
          # The purpose of this is for the PR Review Companion to later
          # be able to use this raw diff file for the benefit of analyzing.
          wget https://github.com/${{ github.repository }}/compare/${{ env.BASE_SHA }}...${{ env.HEAD_SHA }}.diff -O ${{ env.BUILD_OUT_ROOT }}/DIFF

      - name: Merge static assets with built documents
        if: ${{ env.GIT_DIFF_CONTENT }}
        run: |
          # Exclude the .map files, as they're used for debugging JS and CSS.
          rsync -a --exclude "*.map" node_modules/@mdn/yari/client/build/ ${{ env.BUILD_OUT_ROOT }}
          # Show the final disk usage size of the build.
          du -sh ${{ env.BUILD_OUT_ROOT }}

      - uses: actions/upload-artifact@v3
        if: ${{ env.GIT_DIFF_CONTENT }}
        with:
          name: build
          path: build/

      - uses: technote-space/get-diff-action@v6.1.0
        with:
          PATTERNS: files/**/*.+(png|jpeg|jpg|gif|svg|webp)
          ABSOLUTE: true
          SET_ENV_NAME: GIT_DIFF_FILES

      - name: Check changed files
        if: ${{ env.GIT_DIFF_FILES }}
        run: |
          echo ${{ env.GIT_DIFF_FILES }}

          export CONTENT_ROOT=$(pwd)/files
          yarn filecheck ${{ env.GIT_DIFF_FILES }}

      - uses: technote-space/get-diff-action@v6.1.0
        id: git_diff_redirects
        with:
          PATTERNS: files/**/_redirects.txt
          SET_ENV_NAME: GIT_DIFF_REDIRECTS

      - name: Validate redirects
        if: ${{ env.GIT_DIFF_REDIRECTS }}
        run: |
          echo ${{ env.GIT_DIFF_REDIRECTS }}
          yarn content validate-redirects
